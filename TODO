* Fix the bug with selecting items via the text when the text is wrapped
* Add way to specify text alignment (horizontal and vertical)
* Correct text items sizes after resize
* Add possibility to group/ungroup items
* Add grid
* Add guides
* Add nice helpers showing the origin/dimensions of an item when you resize/move it around
* Find a way how to design UI for Undo Tree
* Add fills
* Disable undo/redo buttons when they are impossible
* Position items by arrow keys
* Make sure we always show resize cursors (assign classes to .project)
* Make sure we clear cache when delete an item
* Add a way to align items relatively to each other
* Draw straight/square items with 'Shift'
* Make item/layer names consistent - name everything as 'items'
* Check if I could publish it as a Google Chrome app.
* Add some visual confirmation when you reach some outlet by a connector
* Check if we could avoid setting dimensions to text item from outside, by calculating them based on given text
* Refactor drawer.js
* Add support of larger canvases (larger than the current screen size)
* It seems like sometimes cache is not updated before rendering - mispositioned items. Need to figure out why and fix
* Maybe custom colorize the items?
* Add comments here and there
* Add autoadjusting of items' size to the inner text size
* Add link to Github
* Fix bug - connectors keep 'connected' edges after deleting item with outlet
* Add saving of state
* Think how would it be possible to implement collaboration
  - Could try Firebase, the problem - serializing. tixi.sync should know a lot,
    and need to keep it updated when we change the data schema
  - How to handle undo's? Keep a separate one for every user? Then need to move undo states out of :state
  - How to distinguish who made what change? Prob generate uuid, and check if the change is made not by current
    uuid
  - Keep n 'currents' for every user, and n 'undo' stacks
  - Would be nice to show typing text alive - how?
  - If send updates to Firebase while drawing/resizing, we could spam it...
    Need to check how quickly we can do that
